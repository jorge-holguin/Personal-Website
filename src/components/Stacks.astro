---
// Importa los componentes de iconos personalizados
import HTML from './icons/Html.astro';
import CSS from './icons/Css.astro';
import Javascript from './icons/Javascript.astro';
import React from './icons/React.astro';
import MySQL from './icons/MySQL.astro';

// Prepara un arreglo con los componentes de íconos específicos y sus colores de brillo
const iconComponents = [
  { component: HTML, glowColor: 'rgba(255, 165, 0, 0.6)' }, // Resplandor naranja para HTML
  { component: CSS, glowColor: 'rgba(0, 0, 255, 0.6)' },    // Resplandor azul para CSS
  { component: Javascript, glowColor: 'rgba(255, 255, 0, 0.6)' }, // Resplandor amarillo para JavaScript
  { component: React, glowColor: 'rgba(97, 218, 251, 0.6)' }, // Resplandor para React, ajusta el color como necesites
  { component: MySQL, glowColor: 'rgba(0, 102, 204, 0.6)' }, // Resplandor para MySQL, ajusta el color como necesites
];
---


<div class="icon-row">
    {iconComponents.map((icon, index) => (
      <div key={index} class="icon-wrapper" style={`filter: drop-shadow(0 0 20px ${icon.glowColor});`}>
        <icon.component class="icon" />
      </div>
    ))}
  </div>
  
  <style>
  .icon-row {
    display: flex;
    justify-content: space-around;
    align-items: center;
    width: 100%;
    height: 100px; /* O el alto que prefieras para tu fila de iconos */
  }
  
  .icon-wrapper {
    display: flex;
    justify-content: center;
    align-items: center;
    width: 100%; /* Esto asegura que cada icono tenga la misma anchura */
    max-width: 100px; /* Ajusta esto para el tamaño máximo que quieras para tus íconos */
    height: 100%; /* Esto asegura que cada icono tenga la misma altura */
  }
  
  .icon {
    width: 100%; /* Esto hace que los SVGs ocupen todo el espacio disponible en el icon-wrapper */
    height: auto; /* Esto mantiene la proporción del SVG */
    max-height: 100%; /* Asegura que el SVG no exceda la altura del icon-wrapper */
  }
  </style>